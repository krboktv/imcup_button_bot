Тест подключения nodejs
Получаем privateKey
    ethereum.CreatePrvtKey()
Получаем адрес
	ethereum.GetAddress(prvtKey)
Получаем баланс эфира
	ethereum.GetBalance("0x6D377De54Bde59c6a4B0fa15Cb2EFB84BB32D433")
Отправляем транзакцию
	ethereum.SendTransaction("0x61d94d1c3335c6c30c1336da9e4d54a586f1ffa882338a8bb9f8268296434bc9", "0x6D377De54Bde59c6a4B0fa15Cb2EFB84BB32D433", "0x03b825db4af2A61eaFdeCe3A2AA3039743996df2", "1000")

Тест Waves
Получаем баланс аккаунта в WAVES
	waves.GetWavesBalance("3P3Xd5x7hqKjhKhJXKfPo1RVhixTCWA9TE2")
Получаем баланс аккаунта в другой валюте
	waves.GetBalance("3P3Xd5x7hqKjhKhJXKfPo1RVhixTCWA9TE2", objects.GetAssetID(objects.ZCash))
Создание Seed
	seed := waves.CreateSeed()    

Тест объектов
Получаем assetId конкретной валюты
	objects.GetAssetID(objects.Bitcoin)
Получаем name конкретной валюты
	objects.GetName(objects.Bitcoin)
Получаем ticker конкретной валюты
	ticker := objects.GetTicker(objects.Bitcoin)

Тест курсов
Получаем JSON формат курсов
	course.Course("USD")
	/*
		Берём конкретное значение по кусам.
		Доступные параметры: WAVES, BTC, ETH, ZEC, LTC, USD, EUR
	*/
	courseResult = gjson.Get(string(courseJSON), "WAVES")

Отправить уведомление
    notification.Send("123453321", "Привет!")

Голосования
Создать голосование
    mongo.CreateVote(session, "5abfac858173e1b2e81fb2b8", "Можно плз мы купим что-нибудь?", "2")
Проголосовать
    mongo.AddVoter(session, "5acbddca172847d2da03bf35", true, "5")
