var builder = require('botbuilder');

module.exports.createFinalCard = function createFinalCard(session, crypto, course, commision, toSumCrypto, toSumRub, toAddress1, toAddress2, toName1, toName2, time) {
    return new builder.ReceiptCard(session)
        .title('–î–∞–Ω–Ω—ã–µ –ø–æ –ø–µ—Ä–µ–≤–æ–¥—É')
        .facts([
            builder.Fact.create(session, toAddress1, '–ê–¥—Ä–µ—Å –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è'),

            builder.Fact.create(session, toName1, '–ò–º—è –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è'),

            builder.Fact.create(session, toAddress2, '–ê–¥—Ä–µ—Å –ø–æ–ª—É—á–∞—Ç–µ–ª—è'),

            builder.Fact.create(session, toName2, '–ò–º—è –ø–æ–ª—É—á–∞—Ç–µ–ª—è'),

            builder.Fact.create(session, crypto, '–í–∞–ª—é—Ç–∞'),

            builder.Fact.create(session, toSumCrypto, '–°—É–º–º–∞ –ø–µ—Ä–µ–≤–æ–¥–∞ –≤ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–µ'),

            builder.Fact.create(session, course, '–¢–µ–∫—É—â–∏–π –∫—É—Ä—Å ' + crypto + ' –∫ —Ä—É–±–ª—é'),

            builder.Fact.create(session, toSumRub, '–°—É–º–º–∞ –ø–µ—Ä–µ–≤–æ–¥–∞ –≤ —Ä—É–±–ª—è—Ö'),

            builder.Fact.create(session, time, '–í—Ä–µ–º—è –ø–µ—Ä–µ–≤–æ–¥–∞')
        ])
        .items([])
        .buttons([]);
};

module.exports.createHeroCard = function createHeroCard(session) {
    return new builder.HeroCard(session)
        .images([
            builder.CardImage.create(session, 'https://disruptordaily.com/wp-content/uploads/2017/03/crypto-currency-wallet.jpg')
        ])
        .title('BUTTON - –∫–æ—à–µ–ª–µ–∫ –≤ —Ç–≤–æ—ë–º —Ç–µ–ª–µ–≥—Ä–∞–º–º–µ. –° –ø–æ–º–æ—â—å—é BUTTON –º–æ–∂–Ω–æ —Ö—Ä–∞–Ω–∏—Ç—å –∏ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å —Å–≤–æ–∏–º –¥—Ä—É–∑—å—è–º –Ω–µ —Ç–æ–ª—å–∫–æ —Ñ–∏–∞—Ç–Ω—ã–µ –¥–µ–Ω—å–≥–∏, –Ω–æ –∏ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É.\n\n')
        .subtitle('Waves Light Client. –û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –≤–µ–±-–∫–ª–∏–µ–Ω—Ç –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã waves. https://beta.wavesplatform.com\nC –ø–æ–º–æ—â—å—é –≤–∞—à–µ–≥–æ SEED –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–π—Ç–∏ –≤ –≤–∞—à –∫–æ—à–µ–ª–µ–∫.\n\n')
        .text('–ù–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã. –ë—É–¥–µ–º —Ä–∞–¥—ã –í–∞—à–∏–º –æ—Ç–∑—ã–≤–∞–º –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º.\n@stsasha\n@dictum_sapienti_sat_est')

    // .buttons([
    //     builder.CardAction.openUrl(session, 'https://www.google.ru/', '–ü–æ–¥—Ä–æ–±–Ω–µ–µ')
    // ]);
};

module.exports.createReceiptCard = function createReceiptCard(session, telegramName, myAd) {
    return new builder.ReceiptCard(session)
        .title('–ê–∫–∫–∞—É–Ω—Ç: ' + telegramName + ". –¢—É—Ç –º–æ–∂–Ω–æ –ø–µ—Ä–µ–π—Ç–∏ –≤ –¥—Ä—É–≥–æ–π –∞–∫–∫–∞—É–Ω—Ç –ø–æ –≤–∞—à–µ–º—É seed")
        // .title('–ú–æ–π –∞–¥—Ä–µ—Å: ')
        .facts([

        ])
        .items([])
        .buttons([
            builder.CardAction.imBack(session, '—Å–º–µ–Ω–∏—Ç—å_–∞–∫–∫–∞—É–Ω—Ç', '–ü–µ—Ä–µ–π—Ç–∏')
        ]);
};

module.exports.createCancelCard = function createCancelCard(session) {
    builder.Prompts.text(session, " ")
    return new builder.HeroCard(session)
        .title('–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –ø–µ—Ä–µ–≤–æ–¥–∞ –Ω–∞ —Ç–µ–ª–µ—Ñ–æ–Ω:')
        .buttons([
            builder.CardAction.imBack(session, "–æ—Ç–º–µ–Ω–∞", "–û—Ç–º–µ–Ω–∞")
        ]);
}

module.exports.createPhoneCard = function createPhoneCard(session) {
    return new builder.HeroCard(session)
        .title("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: ")
        .subtitle('–ü—Ä–∏–º–µ—Ä: 89161773789')
        .buttons([builder.CardAction.imBack(session, '–æ—Ç–º–µ–Ω–∞', '–û—Ç–º–µ–Ω–∞')]);
}

module.exports.createSumCard = function createSumCard(session) {
    builder.Prompts.text(session, " ")
    return new builder.HeroCard(session)
        .title('–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –ø–µ—Ä–µ–≤–æ–¥–∞')
        .buttons([
            builder.CardAction.imBack(session, "–æ—Ç–º–µ–Ω–∞", "–û—Ç–º–µ–Ω–∞")
        ]);
}

module.exports.createNickCard = function createNickCard(session, recomendation) {
    return new builder.HeroCard(session)
        .title("–í–≤–µ–¥–∏—Ç–µ **–±–ª–æ–∫—á–µ–π–Ω Waves –∞–¥—Ä–µ—Å** –∏–ª–∏ nickname –ø–æ–ª—É—á–∞—Ç–µ–ª—è")
        .buttons(recomendation);
}

module.exports.createConfirmOrderCard = function createConfirmOrderCard(session, currency ,cur1, cur2, price1, amount, type, course) {
    var price;

    var amountSell;
    if ((session.userData.currency1 != 'US Dollar' && session.userData.currency1 != 'Euro') && (session.userData.currency2 == 'US Dollar' || session.userData.currency2 == 'Euro')) {
        price = Number(price1*Math.pow(10, -2)).toFixed(2);
    } else if ((session.userData.currency1 == 'US Dollar' || session.userData.currency1 == 'Euro') && (session.userData.currency2 != 'US Dollar' && session.userData.currency2 != 'Euro')) {
        price = Number(price1*Math.pow(10, -2)).toFixed(8);
    } else {
        price = Number(price1*Math.pow(10, -session.userData.price)).toFixed(session.userData.decimals);
    }
    

    if (type == 'sell') {
        if(!((session.userData.currency1 == 'US Dollar' || session.userData.currency1 == 'Euro') && (session.userData.currency2 != 'US Dollar' && session.userData.currency2 != 'Euro'))) {
            amountSell = Number((amount/price).toFixed(session.userData.decimals));
            price = (1/price).toFixed(session.userData.decimals);
        } else {
            amountSell = Number((amount/price).toFixed(8));
            price = (1/price).toFixed(8);
        }
    }
    else {
        if(!((session.userData.currency1 == 'US Dollar' || session.userData.currency1 == 'Euro') && (session.userData.currency2 != 'US Dollar' && session.userData.currency2 != 'Euro'))) {
            amountSell = Number((amount*price).toFixed(session.userData.decimals));
        } else {
            amountSell = Number((amount*price).toFixed(8));
        }
    }

    var stringCourse;
    if (course) {
        stringCourse = ' ('+Number(course).toFixed(2)+' RUB)';
    } else {
        stringCourse = '';
    }

    return new builder.ReceiptCard(session)
        .title('–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ:')
        .facts([
            builder.Fact.create(session, String(amount.toFixed(session.userData.decimals) + ' ' + currency[cur1].ticker), '–ü–æ–∫—É–ø–∫–∞'),
            builder.Fact.create(session, String(amountSell + ' ' + currency[cur2].ticker), '–ü—Ä–æ–¥–∞–∂–∞'),
            builder.Fact.create(session, String(price + ' ' + currency[cur2].ticker + stringCourse), '–û–¥–∏–Ω '+cur1)
        ])
        .items([])
        .buttons([
            builder.CardAction.imBack(session, '1–¥–∞', '–î–∞'),
            builder.CardAction.imBack(session, '–æ—Ç–º–µ–Ω–∞', '–ù–µ—Ç')
        ]);
};

module.exports.createButtonCard = function createButtonCard(session, type,isNextFind) {
    var buttons = [];

    if (isNextFind != false) {
        buttons.push(builder.CardAction.imBack(session, "other", '–µ—â—ë 5 –∑–∞—è–≤–æ–∫'));
    }
    
    if (type == 1) {
        buttons.push(builder.CardAction.imBack(session, "buyCrypto", '–°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É'));
    } else {
        buttons.push(builder.CardAction.imBack(session, "sellCrypto", '–°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É'));
    }

    buttons.push(builder.CardAction.imBack(session, '–æ—Ç–º–µ–Ω–∞', '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'));

    return new builder.HeroCard(session)
        .text('üìí –í—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ **—Å–æ–∑–¥–∞—Ç—å —Å–≤–æ—é –∑–∞—è–≤–∫—É**')
        .buttons(buttons)
}

module.exports.cancelButton = function cancelButton(session) {
    return new builder.HeroCard(session)
        .text('–ß—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é - –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É:')
        .buttons([
            builder.CardAction.imBack(session, '–æ—Ç–º–µ–Ω–∞', '–û—Ç–º–µ–Ω–∞')
        ])
}

// –°–í–û–ü –ö–†–ò–ü–¢–ê –§–ò–ê–¢
module.exports.createOrderCard = (session,currency,sumCripto, sumRub, cur, cardService, cardServiceNum, type, isFind, num) => {
    var btn;
    var title;
    var facts = [
        builder.Fact.create(session, String(sumCripto)+' '+currency[cur].ticker, '**C—É–º–º–∞**'),
        builder.Fact.create(session, String(Number(sumRub).toFixed(2))+' '+'RUB', '**–ü—Ä–∏–º–µ—Ä–Ω–æ**')
    ];

    if (type == 1) {
        title = "**–ó–∞—è–≤–∫–∞ –Ω–∞ –ø—Ä–æ–¥–∞–∂—É**"+cur;
    } else {
        title = "**–ó–∞—è–≤–∫–∞ –Ω–∞ –ø–æ–∫—É–ø–∫—É**"+cur;
    }

    if (cardServiceNum != 'noCardNum') {
        facts.push(builder.Fact.create(session, String(cardService), '–¢–∏–ø —Å–µ—Ä–≤–∏—Å–∞'));
        facts.push(builder.Fact.create(session, String(cardServiceNum), '–ù–æ–º–µ—Ä —Å—á—ë—Ç–∞'));
    }

    if (isFind == 'yes' && type == 1) {
        facts.push(builder.Fact.create(session, String(cardService), '–¢–∏–ø —Å–µ—Ä–≤–∏—Å–∞'));
        btn = [builder.CardAction.imBack(session, 'pls'+num.toString(), '–ü—Ä–∏–Ω—è—Ç—å –æ—Ä–¥–µ—Ä #'+num)];
    }
    else if (isFind == 'yes') {
        btn = [builder.CardAction.imBack(session, 'pls'+num.toString(), '–ü—Ä–∏–Ω—è—Ç—å –æ—Ä–¥–µ—Ä #'+num)];
    } else {
        btn = [];
    }
    
    return new builder.ReceiptCard(session)
        .title(title)
        .facts(facts)
        .items([])
        .buttons(btn); 
}

module.exports.endExButton = (session, cur) => {
    return new builder.HeroCard(session)
    .text(`–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ ${cur}, –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å`)
    .buttons([
        builder.CardAction.imBack(session, '–æ—Ç–º–µ–Ω–∞', '–û—Ç–º–µ–Ω–∞')
    ])
}


// swap crypto fiat 

module.exports.createNtCard = function createNtCard(session, type, num, buyOrSell) {
    // duyOrSell - —ç—Ç–æ –ø–∞—Ä–∞–º–µ—Ç—Ä, –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –¢–∏–ø: –ü–û–ö–£–ü–ê–ï–¢ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨, –ö–û–¢–û–†–û–ú–£ –ü–†–ò–î–Å–¢ –ö–ù–û–ü–ö–ê –∏–ª–∏ –ü–†–û–î–ê–Å–¢
    var apl = 'agtyu'+buyOrSell+type+num;
    console.log(String(apl));
    var whatConfirm;
    if (buyOrSell == '0') {
        whatConfirm = '–í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ **–ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –¥–µ–Ω—å–≥–∏ –ø–æ –∞–¥—Ä–µ—Å—É**\n\n\ –ö–∞–∫ —Ç–æ–ª—å–∫–æ –≤—ã –ø–µ—Ä–µ–≤–µ–¥—ë—Ç–µ –¥–µ–Ω—å–≥–∏ –Ω–∞ –∞–¥—Ä–µ—Å –ø—Ä–æ–¥–∞–≤—Ü–∞ –Ω–∞–∂–º–∏—Ç–µ:';
    } else {
        whatConfirm = '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–æ–ª—É—á–µ–Ω–∏–µ —Å—Ä–µ–¥—Å—Ç–≤';
    }
    return new builder.HeroCard(session)
    .text(
        whatConfirm
    )
    .buttons([
        builder.CardAction.imBack(session, String(apl), '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å')
    ])
};

module.exports.createNtCard3 = function createNtCard(session, cardService, cardServiceNum, sum, sumRub, currency, type, num) {
    var apl = '–∞0'+type+num;
    return new builder.HeroCard(session)
    .text(`–ò–∑–≤–∏–Ω–∏—Ç–µ, –∑–∞—è–≤–∫–∞ –Ω–∞ –ø—Ä–æ–¥–∞–∂—É ${sum} ${currency} –±—ã–ª–∞ —É–¥–∞–ª–µ–Ω–∞.`+ "\n\n\0\n\n" + 
    `–ß—Ç–æ–±—ã –ø—Ä–æ–¥–∞—Ç—å –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É - –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –º–µ–Ω—é RUB üîÑ Crypto.`)
    .buttons([
        builder.CardAction.imBack(session, apl, 'RUB üîÑ Crypto')
    ])
};

// swap crypto fiat 

module.exports.confirmSashaPay = (session, num) => {
    var apl = 'sasha0'+num;
    return new builder.HeroCard(session)
    .title('–ö–∞–∫ —Ç–æ–ª—å–∫–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ —Å—Ä–µ–¥—Å—Ç–≤–∞ - –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É')
    .buttons([
        builder.CardAction.imBack(session, apl, '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É —Å—Ä–µ–¥—Å—Ç–≤')
    ])
}

module.exports.endOrder = (session, type, num) => {
    var value = 'rOfd2r9dHww24f'+type+num;
    return new builder.HeroCard(session)
    .text(`–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ:`)
    .buttons([
        builder.CardAction.imBack(session, value, '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å')
    ])
}

module.exports.confirmSendFunds = (session) => {
    return new builder.HeroCard(session)
    .text(`–ö–∞–∫ —Ç–æ–ª—å–∫–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ –¥–µ–Ω—å–≥–∏ - –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:`)
    .buttons([
        builder.CardAction.imBack(session, 'ok', '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å'),
        builder.CardAction.imBack(session, '–æ—Ç–º–µ–Ω–∞', '–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É')
    ])
}


module.exports.disputCard = (session, _num, type, _match, _score) => {
    var disput = '**–°–ø–æ—Ä –Ω–æ–º–µ—Ä** '+_num+': \n\n'+type+'\n\n**–ú–∞—Ç—á**: '+_match+'\n\n**–°—á—ë—Ç**: '+_score;
    return new builder.HeroCard(session)
    .text(disput)
    .buttons([
        builder.CardAction.imBack(session, String('takePlaceInDisput'+_num), '–ü—Ä–∏–Ω—è—Ç—å —É—á–∞—Å—Ç–∏–µ –≤ —Å–ø–æ—Ä–µ'),
    ])
}

module.exports.myDisputCard = (session, _num, type, _match, _score, isAccept) => {
    var buttons = [];
    var secondPerson;
    if (isAccept == true) {
        secondPerson = '–î–∞';
    } else {
        secondPerson = '–ù–µ—Ç';
        buttons.push(builder.CardAction.imBack(session, String('deleteDisput'+_num), '–£–¥–∞–ª–∏—Ç—å'));
    } 

    var disput = '**–°–ø–æ—Ä –Ω–æ–º–µ—Ä** '+_num+': \n\n'+type+'\n\n**–ú–∞—Ç—á**: '+_match+'\n\n**–°—á—ë—Ç**: '+_score+'\n\n<b>–í—Ç–æ—Ä–æ–π —É—á–∞—Å—Ç–Ω–∏–∫</b>: '+secondPerson;
    return new builder.HeroCard(session)
    .text(disput)
    .buttons(buttons)
}